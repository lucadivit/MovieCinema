<?php/** * @access public * @author Luca & Valentina * @package Utility */class USession {               /**     * Il metodo, crea la sessione.      * session.cookie_lifetime -> tempo di scadenza del cookie impostato a chiusura     * del browser.     */    public function __construct() {        ini_set('session.gc_divisor',0);        ini_set('session.gc_maxlifetime',3600);        ini_set('session.cookie_lifetime',0);        session_start();    }            /**     * Dati chiave e valore, crea un indice nell'array $_SESSION.     * @param mixed $chiave     * @param mixed $valore     */    public function imposta_valore($chiave,$valore) {                $_SESSION[$chiave]=$valore;        $cookie = USingleton::getInstaces('UCookie');        $cookie->setCookie($chiave, $valore,'/');    }    /**     * cancella valore da $_SESSION     * @param type $chiave     */    public function cancella_valore($chiave) {        unset($_SESSION[$chiave]);    }    /** * ritorna l username loggato * @return boolean */    public function getusernamesess(){        if(isset($_SESSION['username'])){        return $_SESSION['username'];    }else{        return FALSE;    }    }        /**     * distrugge la sessione ed elimina i cookie     */    function distruggi_sessione(){        $cookie = USingleton::getInstaces('UCookie');        $cookie->eliminaCookie("PHPSESSID");        $cookie->eliminaCookie("username");        $cookie->eliminaCookie("sess");        //unset($_SESSION['username']);        session_unset();    }             /**     *      * @param type $chiave     * @return boolean     */    public function leggi_valore($chiave) {        if (isset($_SESSION[$chiave]))            return $_SESSION[$chiave];        else            return false;    }}